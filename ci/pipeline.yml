---
custom:
  timeouts:
    long: &timeouts-long 2h
  build_log_retention:
    builds: &build_logs_to_retain 500
  debug_bats: &debug_bats true

jobs:
- name: create-openstack-cpi-release-docker-image
  serial: true
  plan:
  - get: bosh-openstack-cpi-release
  - put: openstack-cpi-release-docker-image
    params:
      build: "bosh-openstack-cpi-release/ci/docker/openstack-cpi-release"

- name: pipeline-locator
  plan:
  - get: bosh-openstack-cpi-release
  - task: pipeline-location
    file: bosh-openstack-cpi-release/ci/tasks/pipeline-locator.yml
    params: { PIPELINE_FILENAME: "pipeline.yml" }
    input_mapping: { pipeline-repo: bosh-openstack-cpi-release }

- name: build-candidate
  serial: true
  build_log_retention:
    builds: *build_logs_to_retain
  plan:
  - in_parallel:
    - get: openstack-cpi-release-docker-image
    - get: bosh-openstack-cpi-release
      timeout: *timeouts-long
      trigger: true
    - get: version-semver
      timeout: *timeouts-long
      params:
        bump: patch
  - put: version-semver
    timeout: *timeouts-long
    params:
      file: version-semver/number
  - task: run-unit-specs
    file: bosh-openstack-cpi-release/ci/tasks/run-unit-specs.yml
    image: openstack-cpi-release-docker-image
  - task: build
    timeout: *timeouts-long
    file: bosh-openstack-cpi-release/ci/tasks/build-candidate.yml
    image: openstack-cpi-release-docker-image
  - put: bosh-cpi-dev-artifacts
    timeout: *timeouts-long
    params:
      file: candidate/*.tgz

- name: lifecycle
  serial: true
  serial_groups: [ cleanup-lock-lifecycle ]
  build_log_retention:
    builds: *build_logs_to_retain
  plan:
  - in_parallel:
    - get: bosh-cpi-dev-artifacts
      passed: [ build-candidate ]
      timeout: *timeouts-long
      trigger: true
    - get: bosh-openstack-cpi-release
      passed: [ build-candidate ]
      timeout: *timeouts-long
    - get: openstack-lifecycle-stemcell
      resource: openstack-ubuntu-jammy-stemcell
      timeout: *timeouts-long

  - task: write_ca_file
    tags: [ "nimbus" ]
    file: bosh-openstack-cpi-release/ci/tasks/write-ca-file.yml
    params:
      file_content: ((concourse_openstack_auth.openstack_ca_cert))

  - put: terraform-cpi
    tags: [ "nimbus" ]
    timeout: *timeouts-long
    params:
      env_name: lifecycle
      terraform_source: bosh-openstack-cpi-release/ci/terraform/ci/lifecycle
      vars: &lifecycle-terraform-vars
        prefix: lifecycle
        auth_url: ((concourse_openstack_auth.auth_url))
        cacert_file: ((config-json.tf_ca_file_path))
        user_name: ((config-json.openstack_username))
        password: ((config-json.openstack_password))
        domain_name: ((config-json.lifecycle_openstack_domain))
        project_name: ((config-json.openstack_project))
        ext_net_id: ((config-json.tf_external_network_id))
        ext_net_name: ((config-json.tf_external_network_name))
        region_name: ((config-json.tf_region_name))
        openstack_default_key_public_key: ((config-json.tf_default_public_key))
        dns_nameservers: ((config-json.tf_dns_nameservers))
        use_lbaas: false
  - do:
    - task: test
      tags: [ "nimbus" ]
      timeout: *timeouts-long
      file: bosh-openstack-cpi-release/ci/tasks/run-lifecycle.yml
      params:
        BOSH_OPENSTACK_DOMAIN: ((config-json.lifecycle_openstack_domain))
        BOSH_OPENSTACK_PROJECT: ((config-json.openstack_project))
        BOSH_OPENSTACK_USERNAME_V2: ((config-json.openstack_username))
        BOSH_OPENSTACK_AUTH_URL_V3: ((concourse_openstack_auth.auth_url))
        BOSH_OPENSTACK_USERNAME_V3: ((config-json.openstack_username))
        BOSH_OPENSTACK_API_KEY_V3: ((config-json.openstack_password))
        BOSH_CLI_SILENCE_SLOW_LOAD_WARNING: true
        BOSH_OPENSTACK_VOLUME_TYPE: ((config-json.lifecycle_openstack_volume_type))
        BOSH_OPENSTACK_CONNECT_TIMEOUT: "600"
        BOSH_OPENSTACK_READ_TIMEOUT: "120"
        BOSH_OPENSTACK_WRITE_TIMEOUT: "120"
        BOSH_OPENSTACK_CA_CERT: ((concourse_openstack_auth.openstack_ca_cert))
        BOSH_OPENSTACK_FLAVOR_WITH_NO_ROOT_DISK: ((config-json.openstack_flavor_with_no_root_disk))
        BOSH_OPENSTACK_AVAILABILITY_ZONE: ((config-json.availability_zone))
        BOSH_OPENSTACK_EXCLUDE_CINDER_V1: true
    - put: lifecycle-log
      tags: [ "nimbus" ]
      timeout: *timeouts-long
      params: { file: output/lifecycle.log }
    ensure:
      put: terraform-cpi
      tags: [ "nimbus" ]
      params:
        action: destroy
        env_name: lifecycle
        terraform_source: bosh-openstack-cpi-release/ci/terraform/ci/lifecycle
        vars: *lifecycle-terraform-vars
      get_params:
        action: destroy

- name: bats-ubuntu-manual
  serial: true
  serial_groups: [ cleanup-lock-bats-ubuntu-manual ]
  build_log_retention:
    builds: *build_logs_to_retain
  plan:
  - in_parallel:
    - { trigger: true,  passed: [ build-candidate ], get: bosh-cpi-dev-artifacts, timeout: *timeouts-long }
    - { trigger: false, passed: [ build-candidate ], get: version-semver, timeout: *timeouts-long }
    - { trigger: false, passed: [ build-candidate ], get: bosh-openstack-cpi-release, timeout: *timeouts-long }
    - { trigger: false,                    get: bosh-release, timeout: *timeouts-long }
    - { trigger: true,                    get: stemcell-director, resource: openstack-ubuntu-jammy-stemcell, timeout: *timeouts-long }
    - { trigger: false,                    get: stemcell, resource: openstack-ubuntu-jammy-stemcell, timeout: *timeouts-long }
    - { trigger: false,                    get: bats, timeout: *timeouts-long }
    - { trigger: false,                    get: bosh-deployment, timeout: *timeouts-long }

  - put: terraform-cpi
    tags: [ "nimbus" ]
    timeout: *timeouts-long
    params:
      env_name: bats-ubuntu-manual
      terraform_source: bosh-openstack-cpi-release/ci/terraform/ci/bats-manual
      vars: &bats-terraform-vars
        prefix: "bats-ubuntu-manual"
        auth_url: ((concourse_openstack_auth.auth_url))
        domain_name: ((concourse_openstack_auth.openstack_domain))
        user_name: ((config-json.openstack_username))
        password: ((config-json.openstack_password))
        project_name: ((config-json.openstack_project))
        cacert_file: ((config-json.tf_ca_file_path))
        region_name: ((config-json.tf_region_name))
        primary_net_name: "bats-ubuntu-manual-primary"
        primary_net_cidr: "10.0.4.0/24"
        primary_net_allocation_pool_start: "10.0.4.200"
        primary_net_allocation_pool_end: "10.0.4.254"
        secondary_net_name: "bats-ubuntu-manual-secondary"
        secondary_net_cidr: "10.0.5.0/24"
        secondary_net_allocation_pool_start: "10.0.5.200"
        secondary_net_allocation_pool_end: "10.0.5.254"
        ext_net_name: ((config-json.tf_external_network_name))
        ext_net_id: ((config-json.tf_external_network_id))
        ext_net_cidr: ((config-json.tf_ext_net_cidr))
        dns_nameservers: ((config-json.tf_dns_nameservers))
        concourse_external_network_cidr: null
        openstack_default_key_public_key: ((config-json.tf_default_public_key))

  - do:
    - task: deploy
      tags: [ "nimbus" ]
      timeout: *timeouts-long
      file: bosh-openstack-cpi-release/ci/tasks/deploy-manual-networking.yml
      params:
        openstack_flavor: "m1.small"
        openstack_connection_timeout: "600"
        openstack_read_timeout: "180"
        openstack_write_timeout: "180"
        openstack_state_timeout: "900"
        openstack_auth_url: ((concourse_openstack_auth.auth_url))
        openstack_username: ((config-json.openstack_username))
        openstack_api_key: ((config-json.openstack_password))
        openstack_domain: ((concourse_openstack_auth.openstack_domain))
        distro: "ubuntu"
        availability_zone: ((config-json.availability_zone))
        #NOTE: The CA cert path here is currently relative to the 'bosh-director-deployment' directory.
        openstack_ca_file_path: ((concourse_openstack_auth.openstack_ca_cert_path))
        DEBUG_BATS: *debug_bats

    - task: test
      tags: [ "nimbus" ]
      timeout: *timeouts-long
      file: bosh-openstack-cpi-release/ci/tasks/run-manual-networking-bats.yml
      params:
        stemcell_name: "bosh-openstack-kvm-ubuntu-jammy-go_agent"
        openstack_flavor_with_ephemeral_disk: ((config-json.openstack_flavor_with_ephemeral_disk))
        openstack_flavor_with_no_ephemeral_disk: ((config-json.openstack_flavor_with_no_ephemeral_disk))
        availability_zone: ((config-json.availability_zone))
        DEBUG_BATS: *debug_bats
        bats_rspec_tags: "--tag ~ssh"
      ensure:
        task: print-task-errors
        tags: [ "nimbus" ]
        timeout: *timeouts-long
        file: bosh-openstack-cpi-release/ci/tasks/print_task_errors.yml
    ensure:
      do:
      - task: teardown-director
        tags: [ "nimbus" ]
        timeout: *timeouts-long
        file: bosh-openstack-cpi-release/ci/tasks/teardown-director.yml
        ensure:
          put: terraform-cpi
          tags: [ "nimbus" ]
          params:
            action: destroy
            env_name: bats-ubuntu-manual
            terraform_source: bosh-openstack-cpi-release/ci/terraform/ci/bats-manual
            vars: *bats-terraform-vars
          get_params:
            action: destroy

- name: promote-candidate
  serial: true
  build_log_retention:
    builds: *build_logs_to_retain
  plan:
  - in_parallel:
    - { trigger: false, passed: [ lifecycle, bats-ubuntu-manual ], get: bosh-cpi-dev-artifacts, timeout: *timeouts-long }
    - { trigger: false, passed: [ lifecycle, bats-ubuntu-manual ], get: bosh-openstack-cpi-release, timeout: *timeouts-long }
    - { trigger: false, get: release-version-semver, params: { bump: major }, timeout: *timeouts-long }

  - task: promote
    tags: [ "nimbus" ]
    timeout: *timeouts-long
    file: bosh-openstack-cpi-release/ci/tasks/promote-candidate.yml
    params:
      aws_access_key_id: ((bosh-openstack-cpi-blobs_assume_aws_access_key.username))
      aws_secret_access_key: ((bosh-openstack-cpi-blobs_assume_aws_access_key.password))
      aws_assume_role_arn: ((bosh-openstack-cpi-blobs_assume_aws_access_key.role_arn))

  - put: release-version-semver
    timeout: *timeouts-long
    params: { file: release-version-semver/number }

  - put: bosh-openstack-cpi-release
    timeout: *timeouts-long
    params: { repository: promote/repo, rebase: true, tag: promote/integer_version, tag_prefix: "v" }

- name: bump-deps
  plan:
  - in_parallel:
    - get: bosh-openstack-cpi-release
    - get: ruby-release
    - get: bosh-ruby-release-registry-image
    - get: openstack-cpi-release-docker-image
    - get: weekly
      trigger: true
  - task: bump-gems
    image: bosh-ruby-release-registry-image
    file: ruby-release/ci/tasks/shared/bump-gems.yml
    input_mapping:
      input-repo: bosh-openstack-cpi-release
    output_mapping:
      output-repo: bosh-openstack-cpi-release
    params:
      GEM_DIRS: src/bosh_openstack_cpi
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: bots@cloudfoundry.org
      PACKAGE: ruby-3.1
      VENDOR: true
  - task: run-unit-specs
    file: bosh-openstack-cpi-release/ci/tasks/run-unit-specs.yml
    image: openstack-cpi-release-docker-image
  - put: bosh-openstack-cpi-release
    params:
      repository: bosh-openstack-cpi-release
      rebase: true

- name: bump-bosh-packages
  plan:
  - in_parallel:
    - get: bosh-openstack-cpi-release
    - get: ruby-release
      trigger: true
    - get: golang-release
      trigger: true
    - get: bosh-ecosystem-concourse-image
    - get: openstack-cpi-release-docker-image
  - task: bump-golang-packages
    file: golang-release/ci/tasks/shared/bump-golang-package.yml
    input_mapping:
      input_repo: bosh-openstack-cpi-release
    output_mapping:
      output_repo: bosh-openstack-cpi-release
    params:
      PACKAGES: [ golang-1-linux ]
      PRIVATE_YML: |
        blobstore:
          provider: s3
          options:
            access_key_id:     ((bosh-openstack-cpi-blobs_assume_aws_access_key.username))
            secret_access_key: ((bosh-openstack-cpi-blobs_assume_aws_access_key.password))
            assume_role_arn: ((bosh-openstack-cpi-blobs_assume_aws_access_key.role_arn))
  - task: bump-ruby-package
    image: bosh-ecosystem-concourse-image
    file: ruby-release/ci/tasks/shared/bump-ruby-package.yml
    input_mapping:
      bosh-release: bosh-openstack-cpi-release
    output_mapping:
      bosh-release: bosh-openstack-cpi-release
    params:
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
      PACKAGE: ruby-3.1
      PACKAGE_PREFIX: "openstack"
      PRIVATE_YML: |
        blobstore:
          provider: s3
          options:
            access_key_id:     ((bosh-openstack-cpi-blobs_assume_aws_access_key.username))
            secret_access_key: ((bosh-openstack-cpi-blobs_assume_aws_access_key.password))
            assume_role_arn: ((bosh-openstack-cpi-blobs_assume_aws_access_key.role_arn))
      RUBY_VERSION_PATH: src/bosh_openstack_cpi/.ruby-version
  - task: run-unit-specs
    file: bosh-openstack-cpi-release/ci/tasks/run-unit-specs.yml
    image: openstack-cpi-release-docker-image
  - put: bosh-openstack-cpi-release
    params:
      repository: bosh-openstack-cpi-release
      rebase: true

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    username: ((docker.username))
    password: ((docker.password))
- name: bosh-release
  type: docker-image
  source:
    repository: dpb587/bosh-release-resource
    username: ((docker.username))
    password: ((docker.password))
- name: semver
  type: docker-image
  source:
    repository: concourse/semver-resource
    tag: 1.6
    username: ((docker.username))
    password: ((docker.password))

resources:
- name: terraform-cpi
  type: terraform
  tags: [ "nimbus" ]
  source:
    backend_type: s3
    backend_config:
      bucket: bosh-openstack-cpi-ci
      key: terraform/terraform.tfstate
      region: us-east-1
      access_key: ((bosh-openstack-cpi-ci_assume_aws_access_key.username))
      secret_key: ((bosh-openstack-cpi-ci_assume_aws_access_key.password))
      role_arn: ((bosh-openstack-cpi-ci_assume_aws_access_key.role_arn))


- name: bosh-cpi-dev-artifacts
  type: s3
  tags: [ "nimbus" ]
  source:
    regexp: bosh-openstack-cpi-([0-9.]+)\.tgz
    bucket: bosh-openstack-cpi-ci # OpenStack CPI account
    region_name: us-east-1
    access_key_id: ((bosh-openstack-cpi-ci_assume_aws_access_key.username))
    secret_access_key: ((bosh-openstack-cpi-ci_assume_aws_access_key.password))
    aws_role_arn: ((bosh-openstack-cpi-ci_assume_aws_access_key.role_arn))


- name: lifecycle-log
  type: s3
  tags: [ "nimbus" ]
  source:
    bucket: bosh-openstack-cpi-ci # OpenStack CPI account
    versioned_file: lifecycle.log
    region_name: us-east-1
    access_key_id: ((bosh-openstack-cpi-ci_assume_aws_access_key.username))
    secret_access_key: ((bosh-openstack-cpi-ci_assume_aws_access_key.password))
    aws_role_arn: ((bosh-openstack-cpi-ci_assume_aws_access_key.role_arn))

- name: bosh-openstack-cpi-release
  type: git
  tags: [ "nimbus" ]
  source:
    uri: git@github.com:cloudfoundry/bosh-openstack-cpi-release.git
    branch: master
    private_key: ((github_deploy_key_bosh-openstack-cpi-release.private_key))

- name: version-semver
  type: semver
  tags: [ "nimbus" ]
  source:
    key: current-version
    bucket: bosh-openstack-cpi-ci
    access_key_id: ((bosh-openstack-cpi-ci_assume_aws_access_key.username))
    secret_access_key: ((bosh-openstack-cpi-ci_assume_aws_access_key.password))
    assume_role_arn: ((bosh-openstack-cpi-ci_assume_aws_access_key.role_arn))
    region_name: us-east-1

- name: release-version-semver
  type: semver
  tags: [ "nimbus" ]
  source:
    initial_version: "35.0.0"
    driver: git
    uri: git@github.com:cloudfoundry/bosh-openstack-cpi-release.git
    branch: release-semver
    file: VERSION
    private_key: ((github_deploy_key_bosh-openstack-cpi-release.private_key))

- name: bats
  type: git
  tags: [ "nimbus" ]
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
    branch: master

- name: bosh-release
  type: bosh-io-release
  tags: [ "nimbus" ]
  source:
    repository: cloudfoundry/bosh

- name: openstack-ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  tags: [ "nimbus" ]
  source:
    name: bosh-openstack-kvm-ubuntu-jammy-go_agent

- name: bosh-deployment
  type: git
  tags: [ "nimbus" ]
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment.git
    branch: master

- name: openstack-cpi-release-docker-image
  type: docker-image
  source:
    username: ((docker.username))
    password: ((docker.password))
    repository: boshcpi/openstack-cpi-release
- name: bosh-ruby-release-registry-image
  type: registry-image
  source:
    repository: bosh/ruby-release
    username: ((docker.username))
    password: ((docker.password))
- name: golang-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git
- name: ruby-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-ruby-release.git
- name: bosh-ecosystem-concourse-image
  type: registry-image
  source:
    repository: bosh/bosh-ecosystem-concourse
    username: ((docker.username))
    password: ((docker.password))
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 4:30 -0700
    days: [ Saturday ]
